{"paragraphs":[{"text":"%md\n**Phần xử lý và gộp dữ liệu**","user":"anonymous","dateUpdated":"2025-05-07T23:39:33+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309327_-1394002368","id":"20250507-215334_1941192215","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:33+0700","dateFinished":"2025-05-07T23:39:33+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:16808"},{"text":"%pyspark\n\nimport pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import MinMaxScaler\nimport io\nimport os\nimport sys  \nimport seaborn as sns\nfrom sklearn.ensemble import RandomForestClassifier, RandomForestRegressor\nfrom sklearn.model_selection import train_test_split\nimport matplotlib.pyplot as plt\n\npath_12 = \"D:\\Workspaces\\Introduction_to_data_science\\week08\\dataset_new\\datasets\\heart_12.csv\"\npath_14 = \"D:\\Workspaces\\Introduction_to_data_science\\week08\\dataset_new\\datasets\\heart_14.csv\"\npath_hd = \"D:\\Workspaces\\Introduction_to_data_science\\week08\\dataset_new\\datasets\\heart_disease_dataset.csv\"\n\npath_normal_12 =\"D:\\Workspaces\\Introduction_to_data_science\\week08\\dataset_new\\datasets\\heart_12_normalized.csv\"\npath_normal_hd =\"D:\\Workspaces\\Introduction_to_data_science\\week08\\dataset_new\\datasets\\heart_disease_normalized_rf.csv\"\npath_combined_heart_data =\"D:\\Workspaces\\Introduction_to_data_science\\week08\\dataset_new\\datasets\\combined_heart_data.csv\"\n\ndf_12 = pd.read_csv(path_12) \ndf_14 = pd.read_csv(path_14)\ndf_14 = df_14.drop(columns=['ca', 'thal'], errors='ignore')","user":"anonymous","dateUpdated":"2025-05-07T23:39:33+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309327_-801883171","id":"20250507-104404_2112042516","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:33+0700","dateFinished":"2025-05-07T23:39:33+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16809"},{"text":"%pyspark\n# Tùy chỉnh để hiển thị toàn bộ các hàng và cột\npd.set_option('display.max_rows', None)     # Hiển thị tất cả các hàng\npd.set_option('display.max_columns', None)  # Hiển thị tất cả các cột\npd.set_option('display.width', None)        # Không giới hạn chiều ngang\npd.set_option('display.max_colwidth', None) # Hiển thị toàn bộ nội dung trong mỗi ô","user":"anonymous","dateUpdated":"2025-05-07T23:39:33+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309327_-1762819312","id":"20250507-104408_255385452","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:33+0700","dateFinished":"2025-05-07T23:39:33+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16810"},{"text":"%pyspark\ncolors = [\"#AEE4FF\", \"#6A9CFD\", \"#FFB8D0\", \"#FEE5E1\", \"#FFBFB3\"]","user":"anonymous","dateUpdated":"2025-05-07T23:39:34+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309328_-1576304402","id":"20250507-104659_47006425","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:34+0700","dateFinished":"2025-05-07T23:39:34+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16811"},{"text":"%pyspark\n\n# Định nghĩa hàm ghép datasets\ndef ghep_du_lieu(file_thu_nhat, file_thu_hai, file_ghep):\n    \"\"\"\n    Ghép hai tập dữ liệu về bệnh tim và lưu vào file mới.\n    \n    Tham số:\n        file_thu_nhat (str): Đường dẫn đến file dữ liệu thứ nhất\n        file_thu_hai (str): Đường dẫn đến file dữ liệu thứ hai\n        file_ghep (str): Đường dẫn để lưu file dữ liệu sau khi ghép\n    \n    Trả về:\n        DataFrame: Dữ liệu sau khi ghép\n    \"\"\"\n\n    df_thu_nhat = pd.read_csv(file_thu_nhat)\n    df_thu_hai = pd.read_csv(file_thu_hai)\n    \n    # Kiểm tra sự khác biệt giữa các cột\n    cot_chung = set(df_thu_nhat.columns).intersection(set(df_thu_hai.columns))\n    cot_rieng_1 = set(df_thu_nhat.columns) - cot_chung\n    cot_rieng_2 = set(df_thu_hai.columns) - cot_chung\n    \n    # Xử lý trường hợp các cột không khớp nhau\n    # Chỉ giữ các cột chung\n    cot_chung_plus = [col for col in df_thu_nhat.columns if col in cot_chung]\n    df_thu_nhat = df_thu_nhat[cot_chung_plus]\n    df_thu_hai = df_thu_hai[cot_chung_plus]\n\n    df_ghep = pd.concat([df_thu_nhat, df_thu_hai], axis=0, ignore_index=True)\n    \n    # Lưu dữ liệu đã ghép\n    df_ghep.to_csv(file_ghep, index=False)\n    return df_ghep\n    \nfrom sklearn.impute import KNNImputer\nimport pandas as pd\n\n# Điền giá trị thiếu bằng KNN\ndef knn_impute(df, columns_to_impute, n_neighbors=5, i_round=1):\n    \"\"\"\n    Điền dữ liệu thiếu bằng KNN Imputer, giữ nguyên thứ tự cột.\n    Chỉ làm tròn các cột số liên tục, tránh ảnh hưởng đến dữ liệu phân loại.\n    \"\"\"\n\n    # Lưu thứ tự cột ban đầu\n    column_order = df.columns.tolist()\n\n    # Áp dụng KNN Imputer\n    imputer = KNNImputer(n_neighbors=n_neighbors)\n    imputed_data = imputer.fit_transform(df)\n\n    # Chuyển lại thành DataFrame\n    df_imputed = pd.DataFrame(imputed_data, columns=df.columns)\n\n    # Chỉ làm tròn các cột cần thiết (tránh làm tròn cột phân loại)\n    for col in columns_to_impute:\n        df_imputed[col] = df_imputed[col].round(i_round)\n\n    # Giữ nguyên thứ tự cột\n    df_imputed = df_imputed[column_order]\n    \n    return df_imputed","user":"anonymous","dateUpdated":"2025-05-07T23:39:34+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309328_2071839826","id":"20250507-104842_242282235","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:34+0700","dateFinished":"2025-05-07T23:39:34+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16812"},{"text":"%pyspark\n\n# Chuẩn dataset Heart_12.csv\n#ChestPainType: chest pain type [TA: Typical Angina, ATA: Atypical Angina, NAP: Non-Anginal Pain, ASY: Asymptomatic]\ncp_mapping = {\"TA\":1 ,\"ATA\": 2, \"NAP\": 3, \"ASY\": 0}\nrestecg_mapping = {\"Normal\": 0, \"ST\": 1, \"LVH\" : 2}\nslope_mapping = {\"Up\": 2, \"Flat\": 1, \"Down\": 0}\nsex_mapping = {\"M\": 1, \"F\": 0}\nexang_mapping = {\"Y\": 1, \"N\": 0}\n\n\nnormalized_df = pd.DataFrame({\n    \"age\": df_12[\"Age\"],\n    \"sex\": df_12[\"Sex\"].map(sex_mapping),\n    \"cp\": df_12[\"ChestPainType\"].map(cp_mapping).fillna(0).astype(int),\n    \"trestbps\": df_12[\"RestingBP\"],\n    \"chol\": df_12[\"Cholesterol\"].replace(0, np.nan),\n    \"fbs\": df_12[\"FastingBS\"],\n    \"restecg\": df_12[\"RestingECG\"].map(restecg_mapping).fillna(0).astype(int),\n    \"thalach\": df_12[\"MaxHR\"],\n    \"exang\": df_12[\"ExerciseAngina\"].map(exang_mapping),\n    \"oldpeak\": df_12[\"Oldpeak\"],\n    \"slope\": df_12[\"ST_Slope\"].map(slope_mapping).fillna(1).astype(int),\n    \"target\": df_12[\"HeartDisease\"]\n})\n\n#Áp dụng KNN Imputer\ncolumns_to_fill = ['chol']\nnormalized_df = knn_impute(normalized_df, columns_to_fill, 5)\n\nnormalized_df.to_csv(path_normal_12, index=False)\n\n# Cat (heart_14, heart_12)\npd.set_option('display.max_columns', None, 'display.width', 1000)\nghep_du_lieu(path_14, path_normal_12, path_combined_heart_data)\n\n","user":"anonymous","dateUpdated":"2025-05-07T23:39:34+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309328_1595123210","id":"20250507-104919_833683862","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:34+0700","dateFinished":"2025-05-07T23:39:36+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16813"},{"text":"%pyspark\n\n#Chuẩn dataset heart_disease_dataset\nstandard_df = pd.read_csv(path_combined_heart_data)\ntarget_df = pd.read_csv(path_hd)\n\nnormalized_df = pd.DataFrame()\n\n# Ánh xạ cột từ tập cần chuẩn hóa sang tập chuẩn\n# Dựa trên phân tích thủ công về ý nghĩa và nội dung của mỗi cột\ncolumn_mapping = {\n    'age': 'Age',\n    'sex': 'Gender',  # Cần chuyển đổi 'Male' -> 1, 'Female' -> 0\n    'cp': 'Chest Pain Type',  # Cần chuyển đổi\n    'trestbps': 'Blood Pressure',\n    'chol': 'Cholesterol',\n    'fbs': 'Blood Sugar',  # Cần chuyển đổi \n    'restecg': None,  # Không có trong tập cần chuẩn hóa, sẽ dự đoán bằng RandomForest\n    'thalach': 'Heart Rate',\n    'exang': 'Exercise Induced Angina',  # Cần chuyển đổi 'Yes' -> 1, 'No' -> 0\n    'oldpeak': None,  # Không có, sẽ dự đoán bằng RandomForest\n    'slope': None,  # Không có, sẽ dự đoán bằng RandomForest\n    'target': 'Heart Disease'  # Đã có cùng ý nghĩa\n}\n# 1.age 2.sex 3.cp \nnormalized_df['age'] = target_df['Age']\nnormalized_df['sex'] = target_df['Gender'].map({'Male': 1, 'Female': 0})\n\n# Các loại đau ngực: Atypical Angina, Typical Angina, Non-anginal Pain, Asymptomatic\ncp_mapping = {\n    'Typical Angina': 1,\n    'Atypical Angina': 2,\n    'Non-anginal Pain': 3,\n    'Asymptomatic': 0\n}\nnormalized_df['cp'] = target_df['Chest Pain Type'].map(cp_mapping)\n\n# 4.trestbps 5.chol 6.fbs \nnormalized_df['trestbps'] = target_df['Blood Pressure'] \nnormalized_df['chol'] = target_df['Cholesterol']\nnormalized_df['fbs'] = (target_df['Blood Sugar'] > 120).astype(int)\n\nnormalized_df['restecg'] = np.nan  \n\n# 8.'thalach' (maximum heart rate achieved)\nscaler = MinMaxScaler()\nscaler.fit(standard_df[['thalach']])\nthalach_min = standard_df['thalach'].min()\nthalach_max = standard_df['thalach'].max()\n# Áp dụng công thức: x_scaled = (x - min_old) / (max_old - min_old) * (max_new - min_new) + min_new\nnormalized_df['thalach'] = (target_df['Heart Rate'] - target_df['Heart Rate'].min()) / (target_df['Heart Rate'].max() - target_df['Heart Rate'].min()) * (thalach_max - thalach_min) + thalach_min\nnormalized_df['thalach'] = normalized_df['thalach'].round().astype(int)\n\n#9. exang\nnormalized_df['exang'] = target_df['Exercise Induced Angina'].map({'Yes': 1, 'No': 0})\n\n#10. 'oldpeak' 11.'slope'\nnormalized_df['oldpeak'] = np.nan  \nnormalized_df['slope'] = np.nan  \n#12. target\nnormalized_df['target'] = target_df['Heart Disease']\n\n# Đếm số lượng dòng trùng lặp\nduplicate_count = normalized_df.duplicated().sum()\n\n# Xóa các dòng trùng lặp và giữ lại bản ghi đầu tiên\nnormalized_df = normalized_df.drop_duplicates(keep='first')\n\n#Lưu dữ liệu\nnormalized_df.to_csv(path_normal_hd, index=False)\n","user":"anonymous","dateUpdated":"2025-05-07T23:39:36+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309330_-1815774308","id":"20250507-104958_146714781","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:37+0700","dateFinished":"2025-05-07T23:39:37+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16814"},{"text":"%pyspark\n\n# Cat (normal_12 14, path_normal_hd)\nghep_du_lieu(path_combined_heart_data, path_normal_hd, path_combined_heart_data)\n","user":"anonymous","dateUpdated":"2025-05-07T23:39:37+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309330_-606708753","id":"20250507-105153_294444552","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:37+0700","dateFinished":"2025-05-07T23:39:40+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16815"},{"text":"%pyspark\n\ndf_data = pd.read_csv(path_combined_heart_data) \n\n#Áp dụng KNN Imputer\ncolumns_to_fill = ['restecg', 'slope']\ndf_data = knn_impute(df_data, columns_to_fill, 5, 0)\ncolumns_to_fill = ['oldpeak']\ndf_data = knn_impute(df_data, columns_to_fill, 5, 1)\n\n#Lưu dữ liệu\ndf_data.to_csv(path_combined_heart_data, index=False)\n","user":"anonymous","dateUpdated":"2025-05-07T23:39:40+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309332_1500144753","id":"20250507-105211_1459177253","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:40+0700","dateFinished":"2025-05-07T23:39:41+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16816"},{"text":"%pyspark\n\n# random_state để tái lập kết quả giống nhau\ndf_sample = df_data.sample(n=2900, random_state=42)\n\n# Đọc CSV bằng Spark (không dùng pandas)\ndf_spark = spark.read.option(\"header\", \"true\").option(\"inferSchema\", \"true\").csv(path_combined_heart_data)\n\n# Tạo view SQL\ndf_spark.createOrReplaceTempView(\"heart_data\")","user":"anonymous","dateUpdated":"2025-05-07T23:39:41+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309333_-1642346178","id":"20250507-133141_2014683499","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:41+0700","dateFinished":"2025-05-07T23:39:42+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16817"},{"text":"\n%md\n<div style=\"background-color: #6A9CFD; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h1 style=\"margin: 0;\">Giới thiệu bộ dữ liệu</h1>\n</div>\n","user":"anonymous","dateUpdated":"2025-05-07T23:39:42+0700","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630531956_-1101289819","id":"20250507-220851_1450807010","dateCreated":"2025-05-07T22:08:51+0700","dateStarted":"2025-05-07T23:39:42+0700","dateFinished":"2025-05-07T23:39:42+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16818"},{"text":"%md\n<div style=\"display: flex; gap: 20px; font-family: sans-serif; color: #fff;\">\n  <!-- Cột 1 -->\n  <div style=\"flex: 1; background-color: #1E90FF; padding: 16px; border-radius: 10px;\">\n    <h3 style=\"margin-top: 0;\">Fedesoriano Dataset</h3>\n    <p><strong>Nguồn:</strong> Kaggle (Fedesoriano)</p>\n    <p><strong>Ngày tạo:</strong> 09/2021</p>\n    <p><strong>Liên kết:</strong><br><a href=\"https://www.kaggle.com/datasets/fedesoriano/heart-failure-prediction\" target=\"_blank\" style=\"color: #fff; text-decoration: underline;\">Xem trên Kaggle</a></p>\n    <p><strong>Đặc điểm:</strong><br>Kết hợp 5 bộ dữ liệu từ UCI (Cleveland, Hungary, Switzerland, Long Beach VA, Stalog)</p>\n    <p><strong>Số quan sát:</strong> 918 (sau khi loại trùng)</p>\n    <p><strong>Biến mục tiêu:</strong> 1 (bệnh tim), 0 (bình thường)</p>\n  </div>\n\n  <!-- Cột 2 -->\n  <div style=\"flex: 1; background-color: #4682B4; padding: 16px; border-radius: 10px;\">\n    <h3 style=\"margin-top: 0;\">David Lapp Dataset</h3>\n    <p><strong>Nguồn:</strong> Kaggle (David Lapp)</p>\n    <p><strong>Liên kết:</strong><br><a href=\"https://www.kaggle.com/datasets/johnsmith88/heart-disease-dataset\" target=\"_blank\" style=\"color: #fff; text-decoration: underline;\">Xem trên Kaggle</a></p>\n    <p><strong>Lịch sử:</strong><br>Dữ liệu từ 1988, 4 khu vực (Cleveland, Hungary, Switzerland, Long Beach)</p>\n    <p><strong>Thuộc tính:</strong> 76 thuộc tính, thường dùng 14 thuộc tính chính</p>\n    <p><strong>Biến mục tiêu:</strong> target = 1 (bệnh tim), 0 (bình thường)</p>\n  </div>\n\n  <!-- Cột 3 -->\n  <div style=\"flex: 1; background-color: #5F9EA0; padding: 16px; border-radius: 10px;\">\n    <h3 style=\"margin-top: 0;\">Rashad Mammadov Dataset</h3>\n    <p><strong>Nguồn:</strong> Kaggle (Rashad Mammadov)</p>\n    <p><strong>Ngày tạo:</strong> 06/2024</p>\n    <p><strong>Liên kết:</strong><br><a href=\"https://www.kaggle.com/datasets/rashadrmammadov/heart-disease-prediction\" target=\"_blank\" style=\"color: #fff; text-decoration: underline;\">Xem trên Kaggle</a></p>\n    <p><strong>Mô tả:</strong><br>Tập trung vào yếu tố nguy cơ như lối sống, tiền sử bệnh</p>\n    <p><strong>Biến mục tiêu:</strong> Heart Disease = 1 (bệnh tim), 0 (bình thường)</p>\n  </div>\n</div>\n","user":"anonymous","dateUpdated":"2025-05-07T23:39:42+0700","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630546451_426807180","id":"20250507-220906_998107272","dateCreated":"2025-05-07T22:09:06+0700","dateStarted":"2025-05-07T23:39:42+0700","dateFinished":"2025-05-07T23:39:42+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16819"},{"text":"%md\r\n<div style=\"background-color: #FFBFB3;\">\r\n  .\r\n</div>\r\n\r\n<div style=\"background-color: #6A9CFD; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\r\n  <h1 style=\"margin: 0;\">Phân tích dữ liệu</h1>\r\n</div>","user":"anonymous","dateUpdated":"2025-05-07T23:39:42+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309333_1748660021","id":"20250507-105300_1709708751","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:42+0700","dateFinished":"2025-05-07T23:39:42+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16820"},{"text":"%md\n<div style=\"background-color: #6A9CFD; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h2 style=\"margin: 0;\">Đọc dữ liệu</h1>\n</div>","user":"anonymous","dateUpdated":"2025-05-07T23:39:43+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"results":{},"enabled":true,"editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309334_1395425183","id":"20250507-105327_71787563","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:43+0700","dateFinished":"2025-05-07T23:39:43+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16821"},{"text":"%pyspark\nprint(\"Các trường dữ liệu\")\ndf_spark.columns\n","user":"anonymous","dateUpdated":"2025-05-07T23:39:43+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309334_1722864525","id":"20250507-105401_865558309","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:43+0700","dateFinished":"2025-05-07T23:39:43+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16822"},{"text":"%pyspark\ndf_sample.describe()","user":"anonymous","dateUpdated":"2025-05-07T23:39:43+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309334_-1982357288","id":"20250507-120107_1078439030","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:43+0700","dateFinished":"2025-05-07T23:39:43+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16823"},{"text":"%md\n<div style=\"background-color: #6A9CFD; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h2 style=\"margin: 0;\">Nhận thông tin về dữ liệu</h1>\n</div>","user":"anonymous","dateUpdated":"2025-05-07T23:39:43+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309335_-65426077","id":"20250507-105855_167412639","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:43+0700","dateFinished":"2025-05-07T23:39:43+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16824"},{"text":"%sql\nSELECT * FROM heart_data Limit 12","user":"anonymous","dateUpdated":"2025-05-07T23:39:44+0700","config":{"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"age":"string","sex":"string","cp":"string","trestbps":"string","chol":"string","fbs":"string","restecg":"string","thalach":"string","exang":"string","oldpeak":"string","slope":"string","target":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309334_-503559500","id":"20250507-105936_2118595659","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:44+0700","dateFinished":"2025-05-07T23:39:44+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16825"},{"text":"%md\n<div style=\"background-color: #6A9CFD; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h2 style=\"margin: 0;\">Các số liệu thống kê chính cho các tính năng số</h1>\n</div>","user":"anonymous","dateUpdated":"2025-05-07T23:39:44+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309335_1169124681","id":"20250507-110018_1378202787","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:44+0700","dateFinished":"2025-05-07T23:39:44+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16826"},{"text":"%md\n<div style=\"background-color: #FFB8D0; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h3 style=\"margin: 0;\">Age Feature</h1>\n</div>","user":"anonymous","dateUpdated":"2025-05-07T23:39:44+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309335_852167749","id":"20250507-111019_1706275661","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:45+0700","dateFinished":"2025-05-07T23:39:45+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16827"},{"text":"%csv\n\"Tuổi trung bình\", \"Người cao tuổi nhât\", \"Độ tuổi nhỏ nhất\",\"Std\"\n53,72,25,\"12.74\"","user":"anonymous","dateUpdated":"2025-05-07T23:39:45+0700","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":3,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{"0":{"graph":{"mode":"zeppelin-number","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Tuổi trung bình":"string"," \"Người cao tuổi nhât\"":"string"," \"Độ tuổi nhỏ nhất\"":"string","Std":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"zeppelin-number":{"chartChanged":true,"parameterChanged":false,"panel":{"columnPanelOpened":true,"parameterPanelOpened":true},"spec":{"charts":{"simple":{"transform":{"method":"raw"},"sharedAxis":false,"axis":{"main title":{"dimension":"single","axisType":"key","name":"main title"},"secondary title":{"dimension":"single","axisType":"aggregator","name":"secondary title"}},"parameter":{"fontColor":{"valueType":"string","defaultValue":"black","description":"font color","name":"fontColor"},"fontSize":{"widget":"option","valueType":"string","defaultValue":"medium","description":"font size","optionValues":["small","medium","large"],"name":"fontSize"},"alignment":{"widget":"option","valueType":"string","defaultValue":"center","description":"alignment","optionValues":["left","right","center"],"name":"alignment"},"iconName":{"valueType":"string","defaultValue":"","description":"font awesome icon name. Ex: users","name":"iconName"},"showTitle":{"widget":"checkbox","valueType":"boolean","defaultValue":true,"description":"show title","name":"showTitle"},"prefix":{"valueType":"string","defaultValue":"","description":"prefix","name":"prefix"},"suffix":{"valueType":"string","defaultValue":"","description":"suffix","name":"suffix"}}}},"initialized":false,"version":{"axis":"{\"simple\":[{\"dimension\":\"single\",\"axisType\":\"key\",\"name\":\"main title\"},{\"dimension\":\"single\",\"axisType\":\"aggregator\",\"name\":\"secondary title\"}]}","parameter":"{\"simple\":[{\"valueType\":\"string\",\"defaultValue\":\"black\",\"description\":\"font color\",\"name\":\"fontColor\"},{\"widget\":\"option\",\"valueType\":\"string\",\"defaultValue\":\"medium\",\"description\":\"font size\",\"optionValues\":[\"small\",\"medium\",\"large\"],\"name\":\"fontSize\"},{\"widget\":\"option\",\"valueType\":\"string\",\"defaultValue\":\"center\",\"description\":\"alignment\",\"optionValues\":[\"left\",\"right\",\"center\"],\"name\":\"alignment\"},{\"valueType\":\"string\",\"defaultValue\":\"\",\"description\":\"font awesome icon name. Ex: users\",\"name\":\"iconName\"},{\"widget\":\"checkbox\",\"valueType\":\"boolean\",\"defaultValue\":true,\"description\":\"show title\",\"name\":\"showTitle\"},{\"valueType\":\"string\",\"defaultValue\":\"\",\"description\":\"prefix\",\"name\":\"prefix\"},{\"valueType\":\"string\",\"defaultValue\":\"\",\"description\":\"suffix\",\"name\":\"suffix\"}]}"}},"chart":{"current":"simple","available":["simple"]},"axis":{"simple":{"main title":{"name":"Tuổi trung bình","index":0,"aggr":"sum"},"secondary title":{"name":"Std","index":3,"aggr":"sum"}}},"sharedAxis":{},"axisSpecs":{"simple":[{"dimension":"single","axisType":"key","name":"main title"},{"dimension":"single","axisType":"aggregator","name":"secondary title"}]},"parameter":{"simple":{"fontColor":"black","fontSize":"medium","alignment":"center","iconName":"","showTitle":true,"prefix":"","suffix":""}},"paramSpecs":{"simple":[{"valueType":"string","defaultValue":"black","description":"font color","name":"fontColor"},{"widget":"option","valueType":"string","defaultValue":"medium","description":"font size","optionValues":["small","medium","large"],"name":"fontSize"},{"widget":"option","valueType":"string","defaultValue":"center","description":"alignment","optionValues":["left","right","center"],"name":"alignment"},{"valueType":"string","defaultValue":"","description":"font awesome icon name. Ex: users","name":"iconName"},{"widget":"checkbox","valueType":"boolean","defaultValue":true,"description":"show title","name":"showTitle"},{"valueType":"string","defaultValue":"","description":"prefix","name":"prefix"},{"valueType":"string","defaultValue":"","description":"suffix","name":"suffix"}]}}},"commonSetting":{}},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309336_333900921","id":"20250507-110210_1563174264","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:39:30+0700","dateFinished":"2025-05-07T23:39:30+0700","status":"ERROR","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16828"},{"text":"%pyspark\r\nplt.figure(figsize=(16, 7))\r\n\r\n# Vẽ Boxplot với màu hộp được chỉnh\r\nplt.subplot(1, 2, 1)\r\nbox = plt.boxplot(df_sample['age'], vert=False, patch_artist=True,\r\n                  boxprops=dict(facecolor=\"#6A9CFD\", color=\"#6A9CFD\"),\r\n                  medianprops=dict(color=\"black\"),\r\n                  whiskerprops=dict(color=\"#6A9CFD\"),\r\n                  capprops=dict(color=\"#6A9CFD\"),\r\n                  flierprops=dict(markerfacecolor=\"#6A9CFD\", markeredgecolor=\"#6A9CFD\"))\r\n\r\nplt.title('Boxplot of Age')\r\n\r\n# Vẽ KDE Plot\r\nplt.subplot(1, 2, 2)\r\nsns.kdeplot(df_sample['age'], fill=True, color=\"#6A9CFD\")\r\nplt.title('Age Distribution')\r\nplt.xlabel('Age of people')\r\nplt.ylabel('Frequency')\r\n\r\nplt.tight_layout()\r\nplt.show()","user":"anonymous","dateUpdated":"2025-05-07T22:10:17+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":9,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309336_1855534824","id":"20250507-111429_331081916","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T22:10:17+0700","dateFinished":"2025-05-07T22:10:17+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16829"},{"text":"%csv\n\"Tuổi trung bình\", \"Người cao tuổi nhât\", \"Độ tuổi nhỏ nhất\",\"Std\"\n53,72,25,\"12.74\"","user":"anonymous","dateUpdated":"2025-05-07T22:11:51+0700","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":3,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-number","height":300,"optionOpen":true,"setting":{"zeppelin-number":{"chartChanged":true,"parameterChanged":false,"panel":{"columnPanelOpened":true,"parameterPanelOpened":true},"spec":{"charts":{"simple":{"transform":{"method":"raw"},"sharedAxis":false,"axis":{"main title":{"dimension":"single","axisType":"key","name":"main title"},"secondary title":{"dimension":"single","axisType":"aggregator","name":"secondary title"}},"parameter":{"fontColor":{"valueType":"string","defaultValue":"black","description":"font color","name":"fontColor"},"fontSize":{"widget":"option","valueType":"string","defaultValue":"medium","description":"font size","optionValues":["small","medium","large"],"name":"fontSize"},"alignment":{"widget":"option","valueType":"string","defaultValue":"center","description":"alignment","optionValues":["left","right","center"],"name":"alignment"},"iconName":{"valueType":"string","defaultValue":"","description":"font awesome icon name. Ex: users","name":"iconName"},"showTitle":{"widget":"checkbox","valueType":"boolean","defaultValue":true,"description":"show title","name":"showTitle"},"prefix":{"valueType":"string","defaultValue":"","description":"prefix","name":"prefix"},"suffix":{"valueType":"string","defaultValue":"","description":"suffix","name":"suffix"}}}},"initialized":false,"version":{"axis":"{\"simple\":[{\"dimension\":\"single\",\"axisType\":\"key\",\"name\":\"main title\"},{\"dimension\":\"single\",\"axisType\":\"aggregator\",\"name\":\"secondary title\"}]}","parameter":"{\"simple\":[{\"valueType\":\"string\",\"defaultValue\":\"black\",\"description\":\"font color\",\"name\":\"fontColor\"},{\"widget\":\"option\",\"valueType\":\"string\",\"defaultValue\":\"medium\",\"description\":\"font size\",\"optionValues\":[\"small\",\"medium\",\"large\"],\"name\":\"fontSize\"},{\"widget\":\"option\",\"valueType\":\"string\",\"defaultValue\":\"center\",\"description\":\"alignment\",\"optionValues\":[\"left\",\"right\",\"center\"],\"name\":\"alignment\"},{\"valueType\":\"string\",\"defaultValue\":\"\",\"description\":\"font awesome icon name. Ex: users\",\"name\":\"iconName\"},{\"widget\":\"checkbox\",\"valueType\":\"boolean\",\"defaultValue\":true,\"description\":\"show title\",\"name\":\"showTitle\"},{\"valueType\":\"string\",\"defaultValue\":\"\",\"description\":\"prefix\",\"name\":\"prefix\"},{\"valueType\":\"string\",\"defaultValue\":\"\",\"description\":\"suffix\",\"name\":\"suffix\"}]}"}},"chart":{"current":"simple","available":["simple"]},"axis":{"simple":{"main title":{"name":" \"Người cao tuổi nhât\"","index":1,"aggr":"sum"}}},"sharedAxis":{},"axisSpecs":{"simple":[{"dimension":"single","axisType":"key","name":"main title"},{"dimension":"single","axisType":"aggregator","name":"secondary title"}]},"parameter":{"simple":{"fontColor":"black","fontSize":"small","alignment":"center","iconName":"","showTitle":true,"prefix":"","suffix":""}},"paramSpecs":{"simple":[{"valueType":"string","defaultValue":"black","description":"font color","name":"fontColor"},{"widget":"option","valueType":"string","defaultValue":"medium","description":"font size","optionValues":["small","medium","large"],"name":"fontSize"},{"widget":"option","valueType":"string","defaultValue":"center","description":"alignment","optionValues":["left","right","center"],"name":"alignment"},{"valueType":"string","defaultValue":"","description":"font awesome icon name. Ex: users","name":"iconName"},{"widget":"checkbox","valueType":"boolean","defaultValue":true,"description":"show title","name":"showTitle"},{"valueType":"string","defaultValue":"","description":"prefix","name":"prefix"},{"valueType":"string","defaultValue":"","description":"suffix","name":"suffix"}]}},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Tuổi trung bình":"string"," \"Người cao tuổi nhât\"":"string"," \"Độ tuổi nhỏ nhất\"":"string","Std":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309341_-937264657","id":"20250507-111610_18598827","dateCreated":"2025-05-07T22:05:09+0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16830"},{"text":"%csv\n\"Tuổi trung bình\", \"Người cao tuổi nhât\", \"Độ tuổi nhỏ nhất\",\"Std\"\n53,72,25,\"12.74\"","user":"anonymous","dateUpdated":"2025-05-07T22:11:54+0700","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":3,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"zeppelin-number","height":300,"optionOpen":true,"setting":{"zeppelin-number":{"chartChanged":true,"parameterChanged":false,"panel":{"columnPanelOpened":true,"parameterPanelOpened":true},"spec":{"charts":{"simple":{"transform":{"method":"raw"},"sharedAxis":false,"axis":{"main title":{"dimension":"single","axisType":"key","name":"main title"},"secondary title":{"dimension":"single","axisType":"aggregator","name":"secondary title"}},"parameter":{"fontColor":{"valueType":"string","defaultValue":"black","description":"font color","name":"fontColor"},"fontSize":{"widget":"option","valueType":"string","defaultValue":"medium","description":"font size","optionValues":["small","medium","large"],"name":"fontSize"},"alignment":{"widget":"option","valueType":"string","defaultValue":"center","description":"alignment","optionValues":["left","right","center"],"name":"alignment"},"iconName":{"valueType":"string","defaultValue":"","description":"font awesome icon name. Ex: users","name":"iconName"},"showTitle":{"widget":"checkbox","valueType":"boolean","defaultValue":true,"description":"show title","name":"showTitle"},"prefix":{"valueType":"string","defaultValue":"","description":"prefix","name":"prefix"},"suffix":{"valueType":"string","defaultValue":"","description":"suffix","name":"suffix"}}}},"initialized":false,"version":{"axis":"{\"simple\":[{\"dimension\":\"single\",\"axisType\":\"key\",\"name\":\"main title\"},{\"dimension\":\"single\",\"axisType\":\"aggregator\",\"name\":\"secondary title\"}]}","parameter":"{\"simple\":[{\"valueType\":\"string\",\"defaultValue\":\"black\",\"description\":\"font color\",\"name\":\"fontColor\"},{\"widget\":\"option\",\"valueType\":\"string\",\"defaultValue\":\"medium\",\"description\":\"font size\",\"optionValues\":[\"small\",\"medium\",\"large\"],\"name\":\"fontSize\"},{\"widget\":\"option\",\"valueType\":\"string\",\"defaultValue\":\"center\",\"description\":\"alignment\",\"optionValues\":[\"left\",\"right\",\"center\"],\"name\":\"alignment\"},{\"valueType\":\"string\",\"defaultValue\":\"\",\"description\":\"font awesome icon name. Ex: users\",\"name\":\"iconName\"},{\"widget\":\"checkbox\",\"valueType\":\"boolean\",\"defaultValue\":true,\"description\":\"show title\",\"name\":\"showTitle\"},{\"valueType\":\"string\",\"defaultValue\":\"\",\"description\":\"prefix\",\"name\":\"prefix\"},{\"valueType\":\"string\",\"defaultValue\":\"\",\"description\":\"suffix\",\"name\":\"suffix\"}]}"}},"chart":{"current":"simple","available":["simple"]},"axis":{"simple":{"main title":{"name":" \"Độ tuổi nhỏ nhất\"","index":2,"aggr":"sum"}}},"sharedAxis":{},"axisSpecs":{"simple":[{"dimension":"single","axisType":"key","name":"main title"},{"dimension":"single","axisType":"aggregator","name":"secondary title"}]},"parameter":{"simple":{"fontColor":"black","fontSize":"small","alignment":"center","iconName":"","showTitle":true,"prefix":"","suffix":""}},"paramSpecs":{"simple":[{"valueType":"string","defaultValue":"black","description":"font color","name":"fontColor"},{"widget":"option","valueType":"string","defaultValue":"medium","description":"font size","optionValues":["small","medium","large"],"name":"fontSize"},{"widget":"option","valueType":"string","defaultValue":"center","description":"alignment","optionValues":["left","right","center"],"name":"alignment"},{"valueType":"string","defaultValue":"","description":"font awesome icon name. Ex: users","name":"iconName"},{"widget":"checkbox","valueType":"boolean","defaultValue":true,"description":"show title","name":"showTitle"},{"valueType":"string","defaultValue":"","description":"prefix","name":"prefix"},{"valueType":"string","defaultValue":"","description":"suffix","name":"suffix"}]}},"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"Tuổi trung bình":"string"," \"Người cao tuổi nhât\"":"string"," \"Độ tuổi nhỏ nhất\"":"string","Std":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}},"helium":{}}},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309342_1540428256","id":"20250507-111859_317133120","dateCreated":"2025-05-07T22:05:09+0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16831"},{"text":"%md\r\n\r\n<div style=\"background-color: #E6F0FA; border-left: 4px solid #1E90FF; padding: 16px; font-family: sans-serif;\">\r\n  <h4 style=\"color: #1E90FF; margin-top: 0;\">Tuổi Bệnh Nhân</h3>\r\n  <ul style=\"color: #333; line-height: 1.6;\">\r\n    <li>Tuổi tập trung 45–60 → nhóm trung niên chiếm ưu thế.</li>\r\n    <li>Phân phối lệch trái nhẹ → nhiều bệnh nhân lớn tuổi.</li>\r\n    <li>Không có outlier → dữ liệu đã được lọc kỹ.</li>\r\n    <li>Tuổi thấp nhất 25 → có trường hợp bệnh sớm.</li>\r\n  </ul>\r\n</div>\r\n\r\n","user":"anonymous","dateUpdated":"2025-05-07T22:12:13+0700","config":{"colWidth":6,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630640694_-1719877506","id":"20250507-221040_1261018371","dateCreated":"2025-05-07T22:10:40+0700","dateStarted":"2025-05-07T22:11:00+0700","dateFinished":"2025-05-07T22:11:00+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16832"},{"text":"%md\n<div style=\"background-color: #FFB8D0; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h3 style=\"margin: 0;\">Sex Feature</h1>\n</div>","user":"anonymous","dateUpdated":"2025-05-07T22:06:43+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309342_-81150884","id":"20250507-112054_1114947164","dateCreated":"2025-05-07T22:05:09+0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16833"},{"text":"%pyspark\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\n\r\nplt.figure(figsize=(16, 6))\r\n\r\n# Màu xanh nước biển đậm và nhạt\r\ncustom_colors = ['#4682B4', '#B0C4DE']\r\n\r\n# Biểu đồ cột\r\nplt.subplot(1, 3, 1)\r\nSex_count = df_sample['sex'].value_counts().sort_index()\r\nbars = plt.bar(['Female', 'Male'], Sex_count.values, color=custom_colors)\r\nplt.bar_label(bars, fontweight='bold', fontsize=20)\r\nplt.xlabel('Sex', fontsize=12)\r\nplt.ylabel('Count', fontsize=12)\r\nplt.title('Sex Distribution', fontweight='bold', fontsize=16)\r\nplt.grid(True)\r\n\r\n# Biểu đồ tròn\r\nplt.subplot(1, 3, 2)\r\nexplode = [0.1] * len(Sex_count)\r\nplt.pie(Sex_count, labels=['Female', 'Male'], autopct='%1.1f%%',\r\n        colors=custom_colors, startangle=0, explode=explode, textprops={'fontsize': 20})\r\nplt.title('Sex Distribution', fontweight='bold', fontsize=16)\r\n\r\n# Biểu đồ Seaborn\r\nplt.subplot(1, 3, 3)\r\nSex_Heart = sns.countplot(data=df_sample, x=\"sex\", hue=\"target\", palette=custom_colors)\r\nSex_Heart.set_xticks([0, 1])\r\nSex_Heart.set_xticklabels(['Female', 'Male'])\r\nplt.xlabel(\"Gender\", fontsize=12)\r\nplt.ylabel(\"Count\", fontsize=12)\r\nplt.title(\"Heart Disease Cases by Gender\", fontsize=14)\r\nplt.legend(title=\"Heart Disease\", labels=[\"No\", \"Yes\"])\r\n\r\nplt.tight_layout()\r\nplt.show()\r\n","user":"anonymous","dateUpdated":"2025-05-07T22:24:36+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":8,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309343_123445440","id":"20250507-111428_1646350903","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T22:24:36+0700","dateFinished":"2025-05-07T22:24:37+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16834"},{"text":"%md \n\n<div style=\"background-color: #E6F0FA; border-left: 4px solid #1E90FF; padding: 16px; font-family: sans-serif;\">\n  <h4 style=\"color: #1E90FF; margin-top: 0;\">Giới Tính và Bệnh Tim</h4>\n  <ul style=\"color: #333; line-height: 1.6; margin: 0;\">\n    <li>Nam chiếm gần 2/3 → mất cân bằng giới tính.</li>\n    <li>Tỷ lệ mắc bệnh gần bằng nhau giữa 2 giới.</li>\n    <li>Nữ có tỷ lệ mắc thấp hơn dù số lượng ít hơn.</li>\n  </ul>\n</div>\n","user":"anonymous","dateUpdated":"2025-05-07T22:14:09+0700","config":{"colWidth":4,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630828081_787919953","id":"20250507-221348_45378120","dateCreated":"2025-05-07T22:13:48+0700","dateStarted":"2025-05-07T22:13:55+0700","dateFinished":"2025-05-07T22:13:55+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16835"},{"text":"%md\n\n<div style=\"background-color: #FFB8D0; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h3 style=\"margin: 0;\">ChestPainType featuree</h1>\n</div>","user":"anonymous","dateUpdated":"2025-05-07T22:06:43+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309343_1944776864","id":"20250507-110407_799498817","dateCreated":"2025-05-07T22:05:09+0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16836"},{"text":"%pyspark\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\n\n# Mapping các nhãn dạng số sang mô tả\ncp_mapping = {\n    1.0: 'Typical Angina',\n    2.0: 'Atypical Angina',\n    3.0: 'Non-anginal Pain',\n    0.0: 'Asymptomatic'\n}\n\n# Gán nhãn dạng chữ\ndf_sample['cp_named'] = df_sample['cp'].map(cp_mapping)\n\n# Đếm số người theo cp_named và target\ncp_target_counts = df_sample.groupby(['cp_named', 'target']).size().unstack(fill_value=0)\n\n# Đảm bảo đúng thứ tự\ncp_target_counts = cp_target_counts.loc[cp_mapping.values()]\n\n# Tạo biểu đồ stacked barh\nplt.figure(figsize=(14, 4))\nbar0 = plt.barh(cp_target_counts.index, cp_target_counts[0], color='#9EC1F7', label='Không bị tim')\nbar1 = plt.barh(cp_target_counts.index, cp_target_counts[1], left=cp_target_counts[0], color='#346AB3', label='Bị tim')\n\n# Thêm nhãn số trên từng phần của cột\nfor i, (no_heart, yes_heart) in enumerate(zip(cp_target_counts[0], cp_target_counts[1])):\n    plt.text(no_heart / 2, i, str(no_heart), va='center', ha='center', fontsize=11, color='black')\n    plt.text(no_heart + yes_heart / 2, i, str(yes_heart), va='center', ha='center', fontsize=11, color='white')\n\n# Thêm tổng ở cuối mỗi thanh\nfor i, (no_heart, yes_heart) in enumerate(zip(cp_target_counts[0], cp_target_counts[1])):\n    total = no_heart + yes_heart\n    plt.text(no_heart + yes_heart + 2, i, f\"{total}\", va='center', ha='left', fontsize=10, color='gray')\n\n# Cấu hình biểu đồ\nplt.xlabel('Số người')\nplt.ylabel('Loại đau ngực')\nplt.title('Số người theo loại đau ngực và tình trạng tim (có số)', fontsize=14)\nplt.legend(title='Tình trạng tim')\nplt.tight_layout()\nplt.show()\n","user":"anonymous","dateUpdated":"2025-05-07T22:24:42+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":8,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309344_-950614887","id":"20250507-113352_687636473","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T22:24:42+0700","dateFinished":"2025-05-07T22:24:43+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16837"},{"text":"%md\n<div style=\"background-color:#F3F7FD; border-left: 4px solid #4682B4; padding: 16px; font-family: sans-serif;\">\n  <h4 style=\"color:#4682B4; margin-top:0;\">Loại Đau Ngực và Nguy Cơ Tim Mạch</h4>\n  <ul style=\"margin: 0; color:#333; line-height:1.6;\">\n    <li>Asymptomatic chiếm tỷ lệ cao nhất, và phần lớn bị tim — nghịch lý vì không có triệu chứng.</li>\n    <li>Typical Angina thường gặp ở người mắc bệnh — dù ít phổ biến hơn.</li>\n    <li>Non-anginal Pain không giúp phân biệt rõ tình trạng tim.</li>\n    <li>Atypical Angina phân bố khá đều, khó dự đoán nguy cơ từ nhóm này.</li>\n  </ul>\n</div>\n","user":"anonymous","dateUpdated":"2025-05-07T22:20:08+0700","config":{"colWidth":4,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746631149824_-1906729144","id":"20250507-221909_1235249887","dateCreated":"2025-05-07T22:19:09+0700","dateStarted":"2025-05-07T22:19:12+0700","dateFinished":"2025-05-07T22:19:12+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16838"},{"text":"%pyspark\r\n\r\n# Mapping các nhãn dạng số sang mô tả\r\ncp_mapping = {\r\n    1.0: 'Typical Angina',\r\n    2.0: 'Atypical Angina',\r\n    3.0: 'Non-anginal Pain',\r\n    0.0: 'Asymptomatic'\r\n}\r\n\r\n# Gán tên nhãn mới cho cột cp\r\ndf_sample['cp_named'] = df_sample['cp'].map(cp_mapping)\r\n\r\n# Tính tổng số mỗi loại đau ngực\r\nChest_pain_count = df_sample['cp_named'].value_counts()\r\n\r\n# Tạo bảng màu xanh dương nhạt dần\r\nblue_palette = sns.color_palette(\"Blues\", n_colors=len(Chest_pain_count))\r\n\r\n# Vẽ biểu đồ\r\nplt.figure(figsize=(20, 5))\r\n\r\n# 1. Bar plot với màu xanh dương nhạt dần\r\nplt.subplot(1, 2, 1)\r\nbarplot = sns.countplot(\r\n    x='cp_named', hue='target', data=df_sample, palette=blue_palette[:2])\r\nplt.title('Chest Pain Type Distribution by Heart Disease', fontsize=14)\r\nplt.xlabel('Chest Pain Type')\r\nplt.ylabel('Count')\r\nplt.xticks(rotation=15)\r\n\r\n# Đổi nhãn chú thích cho target: 0 → Không bị tim, 1 → Bị tim\r\nhandles, labels = barplot.get_legend_handles_labels()\r\nplt.legend(handles, ['Không bị tim', 'Bị tim'], title='Tình trạng tim', fontsize=12, title_fontsize=12)\r\n\r\n# 2. Pie chart với màu xanh dương nhạt dần\r\nplt.subplot(1, 2, 2)\r\nexplode = (0.1, 0, 0, 0)\r\nplt.pie(Chest_pain_count.values,\r\n        labels=Chest_pain_count.index,\r\n        autopct='%1.1f%%',\r\n        colors=blue_palette,\r\n        startangle=0,\r\n        explode=explode,\r\n        textprops={'fontsize': 14})\r\nplt.title('Chest Pain Type Distribution', fontweight='bold', fontsize=14)\r\n\r\nplt.tight_layout()\r\nplt.show()\r\n","user":"anonymous","dateUpdated":"2025-05-07T22:24:46+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309345_-2058795359","id":"20250507-112519_2041534073","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T22:24:46+0700","dateFinished":"2025-05-07T22:24:47+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16839"},{"text":"%md\n\n<div style=\"background-color: #FFB8D0; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h3 style=\"margin: 0;\">RestingBP Feature</h1>\n</div>","user":"anonymous","dateUpdated":"2025-05-07T22:24:07+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309346_-1959240264","id":"20250507-112533_726225705","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T22:24:07+0700","dateFinished":"2025-05-07T22:24:07+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16840"},{"text":"%pyspark\r\n\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\n\r\nplt.figure(figsize=(16, 6))\r\n\r\n# Boxplot\r\nplt.subplot(1, 2, 1)\r\nplt.boxplot(df_sample['trestbps'], vert=False)\r\nplt.title('Boxplot of Resting Blood Pressure')\r\nplt.xlabel('Resting Blood Pressure (mm Hg)')\r\n\r\n# Histogram with blood pressure categories\r\nplt.subplot(1, 2, 2)\r\nsns.histplot(df_sample['trestbps'], bins=30, color='#6A9CFD', edgecolor='black')\r\n\r\n# Highlight categories\r\nplt.axvspan(0, 120, color='green', alpha=0.15, label='Normal (<120)')\r\nplt.axvspan(120, 130, color='orange', alpha=0.15, label='Elevated (120–129)')\r\nplt.axvspan(130, df_sample['trestbps'].max(), color='red', alpha=0.15, label='Hypertension (≥130)')\r\n\r\nplt.title('Histogram of Resting Blood Pressure with Categories')\r\nplt.xlabel('Resting Blood Pressure (mm Hg)')\r\nplt.ylabel('Count')\r\nplt.legend(loc='upper right')\r\n\r\n\r\nplt.tight_layout()\r\nplt.show()\r\n","user":"anonymous","dateUpdated":"2025-05-07T22:27:28+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":8,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309346_-639766714","id":"20250507-113843_605551734","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T22:27:28+0700","dateFinished":"2025-05-07T22:27:28+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16841"},{"text":"%md\n\n<div style=\"background-color:#F3F7FD; border-left: 4px solid #5A9BD4; padding: 16px; font-family: sans-serif;\">\n  <h4 style=\"color:#5A9BD4; margin-top:0;\">Huyết Áp Nghỉ Ngơi và Rủi Ro Tim Mạch</h4>\n  <ul style=\"margin: 0; color:#333; line-height:1.6;\">\n    <li>Phân bố lệch phải: nhiều người có huyết áp dưới 130 nhưng vẫn có tỷ lệ bệnh tim đáng kể.</li>\n    <li>Gần 47% người bị tim nằm trong nhóm huyết áp ≥130 (tăng huyết áp) → cần đặc biệt theo dõi.</li>\n    <li>Ngưỡng huyết áp 120–129 chưa phải vùng an toàn tuyệt đối (vẫn có trường hợp bệnh tim).</li>\n    <li>Một số ngoại lệ có huyết áp rất thấp (outlier <70) nhưng vẫn mắc bệnh tim, cho thấy cần phân tích tổng thể nhiều chỉ số.</li>\n  </ul>\n</div>","user":"anonymous","dateUpdated":"2025-05-07T22:23:43+0700","config":{"colWidth":4,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746631407463_742473089","id":"20250507-222327_279956951","dateCreated":"2025-05-07T22:23:27+0700","dateStarted":"2025-05-07T22:23:43+0700","dateFinished":"2025-05-07T22:23:43+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16842"},{"text":"%md\n\n<div style=\"background-color: #FFB8D0; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h3 style=\"margin: 0;\">Cholesterol Feature</h1>\n</div>","user":"anonymous","dateUpdated":"2025-05-07T22:28:27+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309347_-1538454451","id":"20250507-114747_710857608","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T22:28:27+0700","dateFinished":"2025-05-07T22:28:27+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16843"},{"text":"%pyspark\r\n\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\nimport numpy as np\r\n\r\n# Tính trung vị và giá trị số cho cholesterol\r\nmedian_chol = np.median(df_sample['chol'])\r\nmean_chol = np.mean(df_sample['chol'])\r\n\r\nplt.figure(figsize=(16, 6))\r\n\r\n# Cải tiến Boxplot\r\nplt.subplot(1, 2, 1)\r\nbox = plt.boxplot(df_sample['chol'], vert=False, patch_artist=True, \r\n                  boxprops=dict(facecolor='#6A9CFD', color='black'), \r\n                  whiskerprops=dict(color='black', linewidth=1.5), \r\n                  flierprops=dict(markerfacecolor='red', marker='o', markersize=8),\r\n                  medianprops=dict(color='red', linewidth=2))\r\nplt.title('Boxplot of Cholesterol', fontsize=14)\r\nplt.xlabel('Cholesterol (mg/dL)', fontsize=12)\r\n\r\n# Thêm trung vị và số vào boxplot\r\nplt.text(median_chol, 1.05, f'Median: {median_chol:.2f}', horizontalalignment='center', color='red', fontsize=12, weight='bold')\r\n\r\n# Cải tiến KDE plot\r\nplt.subplot(1, 2, 2)\r\nsns.kdeplot(df_sample['chol'], fill=True, color='#6A9CFD', linewidth=2)\r\n\r\n# Thêm đường trung vị và trung bình vào KDE plot\r\nplt.axvline(median_chol, color='red', linestyle='--', label=f'Median: {median_chol:.2f}')\r\nplt.axvline(mean_chol, color='green', linestyle='--', label=f'Mean: {mean_chol:.2f}')\r\n\r\n# Tiêu đề và nhãn\r\nplt.title('Cholesterol Distribution', fontsize=14)\r\nplt.xlabel('Cholesterol of People (mg/dL)', fontsize=12)\r\nplt.ylabel('Density', fontsize=12)\r\nplt.legend()\r\n\r\nplt.tight_layout()\r\nplt.show()\r\n","user":"anonymous","dateUpdated":"2025-05-07T22:28:56+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":8,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309347_807735721","id":"20250507-120251_930673160","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T22:28:37+0700","dateFinished":"2025-05-07T22:28:37+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16844"},{"text":"%md\n<div style=\"background-color:#FDF5F3; border-left: 4px solid #E97451; padding: 16px; font-family: sans-serif;\">\n  <h4 style=\"color:#E97451; margin-top:0;\">Cholesterol và Dấu Hiệu Nguy Cơ Tiềm Ẩn</h4>\n  <ul style=\"margin: 0; color:#333; line-height:1.6;\">\n    <li>Phân phối lệch phải mạnh → nhiều người có cholesterol rất cao (outliers trên 400–500 mg/dL).</li>\n    <li>Mean > Median (246.95 > 242) cho thấy ảnh hưởng rõ từ các giá trị cực trị.</li>\n    <li>Một số người có cholesterol dưới 200 (ngưỡng \"bình thường\") nhưng vẫn mắc bệnh tim → yếu tố này không quyết định tuyệt đối.</li>\n    <li>Phân phối có xu hướng bimodal nhẹ, có thể do khác biệt giới tính hoặc nhóm tuổi.</li>\n  </ul>\n</div>\n","user":"anonymous","dateUpdated":"2025-05-07T22:29:00+0700","config":{"colWidth":4,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746631725554_-993532118","id":"20250507-222845_1862030481","dateCreated":"2025-05-07T22:28:45+0700","dateStarted":"2025-05-07T22:28:50+0700","dateFinished":"2025-05-07T22:28:50+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16845"},{"text":"%md\n\n<div style=\"background-color: #FFB8D0; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h3 style=\"margin: 0;\">FBS Feature</h3>\n</div>\n","user":"anonymous","dateUpdated":"2025-05-07T22:06:44+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309348_1706266187","id":"20250507-120445_192329658","dateCreated":"2025-05-07T22:05:09+0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16846"},{"text":"%pyspark\r\n\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\nimport pandas as pd\r\n\r\n# Mapping giá trị fbs\r\nfbs_mapping = {0: 'FBS < 120', 1: 'FBS ≥ 120'}\r\ndf_sample['fbs_named'] = df_sample['fbs'].map(fbs_mapping)\r\n\r\n# Tính tổng số mỗi nhóm\r\nFastingBS_count = df_sample['fbs_named'].value_counts()\r\n\r\n# Màu xanh dương dịu\r\nblue_palette = sns.color_palette(\"Blues\", n_colors=len(FastingBS_count))\r\n\r\n# Vẽ figure tổng\r\nfig = plt.figure(figsize=(16, 6))\r\ngs = fig.add_gridspec(2, 2, height_ratios=[1, 3])  # chia lưới 2 hàng: hàng đầu là bảng\r\n\r\n# --- BẢNG: nằm dòng đầu ---\r\nax_table = fig.add_subplot(gs[0, :])\r\ntable_data = pd.DataFrame({'FastingBS Category': FastingBS_count.index, 'Count': FastingBS_count.values})\r\nax_table.axis('off')\r\ntable = ax_table.table(cellText=table_data.values,\r\n                       colLabels=table_data.columns,\r\n                       cellLoc='center',\r\n                       loc='center',\r\n                       colColours=['#6A9CFD', '#6A9CFD'])\r\ntable.auto_set_font_size(False)\r\ntable.set_fontsize(14)\r\ntable.scale(1.2, 2)\r\n\r\n# --- Biểu đồ CỘT ---\r\nax_bar = fig.add_subplot(gs[1, 0])\r\nsns.countplot(x='fbs_named', hue='target', data=df_sample, palette=blue_palette, ax=ax_bar)\r\nax_bar.set_title('Fasting Blood Sugar vs Heart Disease', fontsize=14, fontweight='bold')\r\nax_bar.set_xlabel('Fasting Blood Sugar Level', fontsize=12)\r\nax_bar.set_ylabel('Count', fontsize=12)\r\nax_bar.legend(title='Heart Disease', labels=['No (0)', 'Yes (1)'])\r\nax_bar.tick_params(axis='x', labelsize=11)\r\n\r\n# --- Biểu đồ TRÒN ---\r\nax_pie = fig.add_subplot(gs[1, 1])\r\nexplode = (0.1, 0)\r\nax_pie.pie(FastingBS_count.values,\r\n           labels=FastingBS_count.index,\r\n           autopct='%1.1f%%',\r\n           colors=blue_palette,\r\n           startangle=0,\r\n           explode=explode,\r\n           textprops={'fontsize': 12})\r\nax_pie.set_title('FastingBS Category Distribution', fontweight='bold', fontsize=14)\r\n\r\nplt.tight_layout()\r\nplt.show()\r\n","user":"anonymous","dateUpdated":"2025-05-07T22:32:14+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":8,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309348_-818185207","id":"20250507-121438_493733278","dateCreated":"2025-05-07T22:05:09+0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16847"},{"text":"%md\n<div style=\"background-color:#F0FAF7; border-left: 4px solid #34A89D; padding: 16px; font-family: sans-serif;\">\n  <h4 style=\"color:#34A89D; margin-top:0;\">Đường Huyết Lúc Đói và Mối Liên Quan Tới Bệnh Tim</h4>\n  <ul style=\"margin: 0; color:#333; line-height:1.6;\">\n    <li>Chỉ có <strong>32.7%</strong> bệnh nhân có FBS ≥ 120, cho thấy đây không phải chỉ dấu chính của bệnh tim trong bộ dữ liệu.</li>\n    <li>Tỷ lệ mắc bệnh tim ở cả hai nhóm (FBS < 120 và ≥ 120) là tương đối tương đương → FBS không mang tính phân tách rõ ràng.</li>\n    <li>Dù mức FBS cao là yếu tố nguy cơ tim mạch (liên quan đến đái tháo đường), nhưng kết quả này gợi ý rằng các yếu tố khác (ví dụ: ECG, Cholesterol, tuổi tác) có thể đóng vai trò lớn hơn trong phát hiện bệnh tim.</li>\n    <li>Trên lâm sàng, FBS cao thường đi kèm <em>hội chứng chuyển hóa</em> (metabolic syndrome), làm tăng nguy cơ xơ vữa động mạch.</li>\n  </ul>\n</div>\n","user":"anonymous","dateUpdated":"2025-05-07T22:32:18+0700","config":{"colWidth":4,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746631918037_2058131619","id":"20250507-223158_2069172471","dateCreated":"2025-05-07T22:31:58+0700","dateStarted":"2025-05-07T22:32:07+0700","dateFinished":"2025-05-07T22:32:07+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16848"},{"text":"%md\n\n<div style=\"background-color: #FFB8D0; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h3 style=\"margin: 0;\">Restecg Feature</h3>\n</div>\n","user":"anonymous","dateUpdated":"2025-05-07T22:32:23+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309349_1824803859","id":"20250507-121106_99351984","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T22:32:23+0700","dateFinished":"2025-05-07T22:32:23+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16849"},{"text":"%pyspark \r\n\r\nimport pandas as pd\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\n\r\n# Giả sử df_sample đã tồn tại và chứa cột 'restecg' và 'target'\r\n\r\n# Gán nhãn cho restecg\r\nrestecg_mapping = {\r\n    0: 'Normal',\r\n    1: 'ST-T Abnormality',\r\n    2: 'LVH (Risk)'\r\n}\r\ndf_sample['restecg_named'] = df_sample['restecg'].map(restecg_mapping)\r\n\r\n# Tính số lượng theo nhóm\r\nrestecg_target_counts = df_sample.groupby(['restecg_named', 'target']).size().reset_index(name='count')\r\n\r\n# Tính phần trăm trong từng nhóm restecg_named\r\nrestecg_total = restecg_target_counts.groupby('restecg_named')['count'].transform('sum')\r\nrestecg_target_counts['percentage'] = (restecg_target_counts['count'] / restecg_total * 100).round(1)\r\n\r\n# Vẽ biểu đồ\r\nplt.figure(figsize=(16, 8))\r\n\r\n# Biểu đồ cột với phần trăm Yes/No\r\nplt.subplot(1, 2, 1)\r\nax = sns.barplot(x='restecg_named', y='count', hue='target', data=restecg_target_counts, palette='Blues')\r\nplt.title('RestingECG vs Heart Disease')\r\nplt.xlabel('RestingECG Category')\r\nplt.ylabel('Count')\r\nplt.legend(title='Heart Disease', labels=['No', 'Yes'])\r\n\r\n# Gắn nhãn phần trăm lên từng cột (Yes và No trong mỗi nhóm)\r\nunique_groups = restecg_target_counts['restecg_named'].unique().tolist()\r\n\r\nfor i, row in restecg_target_counts.iterrows():\r\n    group = row['restecg_named']\r\n    target = row['target']\r\n    count = row['count']\r\n    pct = row['percentage']\r\n    \r\n    # Tính vị trí x (vì các nhóm được encode thành 0,1,2 trên trục x)\r\n    xpos = unique_groups.index(group)\r\n    offset = -0.2 if target == 0 else 0.2  # dịch sang trái/phải tùy theo target\r\n    ax.text(xpos + offset, count + 1, f'{pct:.1f}%', ha='center', fontsize=10)\r\n\r\n# Biểu đồ tròn phân phối RestingECG\r\nplt.subplot(1, 2, 2)\r\nrestecg_counts = df_sample['restecg_named'].value_counts()\r\nexplode = [0.1 if label == 'LVH (Risk)' else 0 for label in restecg_counts.index]\r\nplt.pie(\r\n    restecg_counts.values,\r\n    labels=restecg_counts.index,\r\n    autopct='%1.1f%%',\r\n    explode=explode,\r\n    colors=sns.color_palette(\"Blues\", n_colors=3),\r\n    startangle=90,\r\n    textprops={'fontsize': 14}\r\n)\r\nplt.title('RestingECG Distribution')\r\n\r\nplt.tight_layout()\r\nplt.show()\r\n\r\n","user":"anonymous","dateUpdated":"2025-05-07T22:54:04+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":8,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309350_-1957382258","id":"20250507-122321_623872499","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T22:54:04+0700","dateFinished":"2025-05-07T22:54:04+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16850"},{"text":"%md\n<div style=\"background-color:#FEF8EF; border-left: 4px solid #D39B3D; padding: 16px; font-family: sans-serif;\">\n  <h4 style=\"color:#D39B3D; margin-top:0;\">Điện Tâm Đồ Lúc Nghỉ và Vai Trò Lâm Sàng Trong Chẩn Đoán Tim Mạch</h4>\n  <ul style=\"margin: 0; color:#333; line-height:1.6;\">\n    <li>Nhóm <strong>LVH (Left Ventricular Hypertrophy)</strong> có <em>tỷ lệ bệnh tim cao nhất</em> (~55.1%), dù chỉ chiếm 7.4% tổng số → dấu hiệu nguy cơ mạnh.</li>\n    <li><strong>ST-T Abnormality</strong> cũng có tỷ lệ bệnh tim vượt nhóm “Normal”, gợi ý có bất thường điện học dù không rõ ràng về cơ học.</li>\n    <li>Ngược lại, nhóm có ECG \"bình thường\" chiếm đa số nhưng vẫn có tới khoảng 43% mắc bệnh tim → ECG bình thường không loại trừ nguy cơ.</li>\n    <li><strong>Thực tế lâm sàng:</strong> ECG là công cụ sàng lọc đầu tay để phát hiện các bất thường như thiếu máu cơ tim, block nhĩ-thất, hoặc phì đại thất. Tuy nhiên:\n      <ul style=\"margin-left: 20px;\">\n        <li>ECG có độ nhạy không cao với bệnh tim thiếu máu cục bộ không triệu chứng.</li>\n        <li>ECG bất thường như LVH thường phản ánh tình trạng tim mạn tính do tăng huyết áp kéo dài.</li>\n        <li>ST-T abnormality là dấu hiệu <em>gợi ý thiếu máu cơ tim</em> – cần làm thêm ECG gắng sức hoặc siêu âm tim để xác định rõ hơn.</li>\n      </ul>\n    </li>\n  </ul>\n</div>\n","user":"anonymous","dateUpdated":"2025-05-07T22:53:06+0700","config":{"colWidth":4,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746631957343_-1280239382","id":"20250507-223237_1215348156","dateCreated":"2025-05-07T22:32:37+0700","dateStarted":"2025-05-07T22:53:06+0700","dateFinished":"2025-05-07T22:53:06+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16851"},{"text":"%md\n\n<div style=\"background-color: #FFB8D0; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h3 style=\"margin: 0;\">Thalach Feature</h3>\n</div>\n","user":"anonymous","dateUpdated":"2025-05-07T22:06:44+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309350_-1895134921","id":"20250507-121144_1733049892","dateCreated":"2025-05-07T22:05:09+0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16852"},{"text":"%pyspark\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pandas as pd\n\n# Histogram + KDE\nplt.figure(figsize=(18, 6))\n\nplt.subplot(1, 2, 1)\nsns.histplot(df_sample[\"thalach\"], bins=30, kde=True, color=\"blue\", edgecolor='black')\nplt.title(\"Distribution of Maximum Heart Rate (thalach)\", fontsize=14)\nplt.xlabel(\"thalach (bpm)\", fontsize=12)\nplt.ylabel(\"Frequency\", fontsize=12)\n\n# Line plot: Thalach vs Age + Reference line (220 - age)\nplt.subplot(1, 2, 2)\n\n# Tính nhịp tim tối đa theo công thức chuẩn\ndf_sample['predicted_thalach'] = 220 - df_sample['age']\n\n# Tính trung bình thực tế theo tuổi\nthalach_by_age = df_sample.groupby('age')[['thalach', 'predicted_thalach']].mean().reset_index()\n\n# Vẽ thực tế\nsns.lineplot(data=thalach_by_age, x='age', y='thalach', label='Actual thalach', color='blue')\n# Vẽ công thức lý thuyết\nsns.lineplot(data=thalach_by_age, x='age', y='predicted_thalach', label='220 - age (Expected)', color='red', linestyle='--')\n\nplt.title(\"Max Heart Rate (thalach) vs Age\", fontsize=14)\nplt.xlabel(\"Age\", fontsize=12)\nplt.ylabel(\"Heart Rate (bpm)\", fontsize=12)\nplt.legend()\n\nplt.tight_layout()\nplt.show()\n\n","user":"anonymous","dateUpdated":"2025-05-07T22:54:38+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309351_1058337304","id":"20250507-123302_666375012","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T22:54:38+0700","dateFinished":"2025-05-07T22:54:39+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16853"},{"text":"%md\r\n<div style=\"background-color:#EAF4FB; border-left: 4px solid #007BFF; padding: 16px; font-family: sans-serif;\">\r\n  <h4 style=\"color:#007BFF; margin-top:0;\">Nhịp Tim Tối Đa (Thalach) và Ý Nghĩa Ẩn Trong Phân Tích Lâm Sàng</h4>\r\n  <ul style=\"margin: 0; color:#333; line-height:1.6;\">\r\n    <li>Dù trung bình Thalach tập trung quanh 150–170 bpm, vẫn có số lượng đáng kể bệnh nhân với nhịp tim tối đa <strong>thấp hơn nhiều</strong> – đây có thể là dấu hiệu <em>suy giảm khả năng đáp ứng tim với gắng sức</em>.</li>\r\n    <li>Đường “220 - tuổi” thường <em>vượt xa</em> giá trị thực tế đo được → công thức này có thể <strong>không phù hợp cho người có bệnh lý tim mạch</strong> hoặc lớn tuổi.</li>\r\n    <li>Biểu đồ theo tuổi cho thấy sự <strong>dao động lớn</strong> trong Thalach theo từng độ tuổi → cho thấy các yếu tố như thuốc chẹn beta, thể lực, lo âu cũng ảnh hưởng mạnh.</li>\r\n    <li>Người có Thalach thấp nhưng không cao tuổi có thể mang nguy cơ <strong>thiếu máu cơ tim câm lặng</strong> – không đau ngực nhưng tim không đạt được nhịp tối đa khi cần.</li>\r\n    <li><strong>Gợi ý lâm sàng:</strong> Thalach nên được đánh giá kết hợp cùng nghiệm pháp gắng sức (stress test), hơn là dùng độc lập. Khi nhịp tim tối đa quá thấp so với tuổi, cần cân nhắc thêm siêu âm tim hoặc chụp mạch vành.</li>\r\n  </ul>\r\n</div>\r\n","user":"anonymous","dateUpdated":"2025-05-07T22:53:24+0700","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746633116477_-523126384","id":"20250507-225156_836699960","dateCreated":"2025-05-07T22:51:56+0700","dateStarted":"2025-05-07T22:53:24+0700","dateFinished":"2025-05-07T22:53:24+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16854"},{"text":"%md\n<div style=\"background-color: #FFB8D0; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h3 style=\"margin: 0;\">Exang Feature</h3>\n</div>\n\n","user":"anonymous","dateUpdated":"2025-05-07T22:06:45+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":4,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309352_-225964429","id":"20250507-121216_1218605250","dateCreated":"2025-05-07T22:05:09+0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16855"},{"text":"%md\n<div style=\"background-color: #FFB8D0; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h3 style=\"margin: 0;\">Slope Feature</h3>\n</div>\n\n","user":"anonymous","dateUpdated":"2025-05-07T22:06:45+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":8,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309352_-276482811","id":"20250507-121241_367459021","dateCreated":"2025-05-07T22:05:09+0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16856"},{"text":"%pyspark\r\n\r\nplt.figure(figsize=(6, 6))\r\n\r\n# Biểu đồ tròn cho ExerciseAngina\r\nplt.subplot(1, 1, 1)\r\nExerciseAngina_count = df_sample['exang'].value_counts()\r\n\r\n# Đánh nhãn: 1 là bị đau, 0 là không bị đau\r\nlabels = ['Pain (1)', 'No Pain (0)']\r\n\r\n# Tạo biểu đồ tròn với màu xanh dương\r\nblue_palette = sns.color_palette(\"Blues\", n_colors=2) \r\n\r\nexplode = (0.1, 0)  # Tạo hiệu ứng cho phần đầu tiên\r\nplt.pie(ExerciseAngina_count, labels=labels, autopct='%1.1f%%',\r\n        colors=blue_palette, startangle=0, explode=explode, textprops={'fontsize': 14})\r\nplt.title('Exercise Angina Distribution', fontweight='bold', fontsize=16)\r\n\r\nplt.tight_layout()\r\nplt.show()\r\n","user":"anonymous","dateUpdated":"2025-05-07T22:06:45+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":4,"editorMode":"ace/mode/python","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309352_-662323370","id":"20250507-123601_1897192897","dateCreated":"2025-05-07T22:05:09+0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16857"},{"text":"%pyspark\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\n\r\n# Tính tỷ lệ mắc bệnh theo từng loại slope\r\nST_Slope_count = df_sample['slope'].value_counts()\r\nST_Slope_percentage = ST_Slope_count / ST_Slope_count.sum() * 100\r\n\r\n# Vẽ biểu đồ\r\nplt.figure(figsize=(12, 5))\r\n\r\n# Countplot của slope và tỷ lệ mắc bệnh\r\nplt.subplot(1, 2, 1)\r\nsns.countplot(x='slope', hue='target', data=df_sample, palette='Blues')  # Màu xanh dương\r\nplt.title('Slope Distribution by Heart Disease', fontsize=16)\r\nplt.xlabel('Slope', fontsize=14)\r\nplt.ylabel('Count', fontsize=14)\r\n\r\n# Đánh nhãn trên trục x cho từng loại slope\r\nplt.xticks([0, 1, 2], ['0: Highest Risk', '1: Moderate Risk', '2: Lowest Risk'])\r\n\r\n# Thêm nhãn cho target (1 là bị bệnh tim)\r\nhandles, labels = plt.gca().get_legend_handles_labels()\r\nplt.legend(handles=handles, labels=['No Heart Disease (0)', 'Heart Disease (1)'], title='Target', fontsize=12)\r\n\r\n# Pie chart cho tỷ lệ mắc bệnh theo slope\r\nplt.subplot(1, 2, 2)\r\nexplode = (0.1, 0, 0)  # Làm nổi bật nhóm đầu tiên\r\n\r\n# Cập nhật nhãn trong pie chart để phù hợp với các nhóm slope\r\nlabels = [f'{i}: {label}' for i, label in enumerate(ST_Slope_percentage.index)]\r\n\r\nplt.pie(ST_Slope_percentage, labels=labels, autopct='%1.1f%%',\r\n        colors=sns.color_palette('Blues', n_colors=3), startangle=0, explode=explode, textprops={'fontsize': 20})\r\nplt.title('Slope Distribution', fontweight='bold', fontsize=16)\r\n\r\n# Hiển thị biểu đồ\r\nplt.tight_layout()\r\nplt.show()\r\n","user":"anonymous","dateUpdated":"2025-05-07T22:06:45+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":8,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309353_19051716","id":"20250507-124820_2064861269","dateCreated":"2025-05-07T22:05:09+0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16858"},{"text":"%md\r\n<div style=\"background-color:#FFF9E6 ; border-left: 4px solid #FFF9E6 ; padding: 16px; font-family: sans-serif;\">\r\n  <h4 style=\"color:black; margin-top:0;\">Phân Tích Chuyên Sâu Các Đặc Trưng Exercise Angina và Slope Trong Dự Báo Bệnh Tim Mạch</h4>\r\n  <ul style=\"margin: 0; color:black; line-height:1.6;\">\r\n    <li><strong>Exercise Angina:</strong> Tỷ lệ người bị đau ngực khi tập thể dục (Pain) là 59.4%, trong khi đó 40.6% không có dấu hiệu đau ngực (No Pain). Đây là một yếu tố quan trọng trong việc đánh giá nguy cơ bệnh tim mạch, vì đau ngực có thể chỉ ra sự thiếu máu cơ tim hoặc các vấn đề về tuần hoàn máu.</li>\r\n    <li><strong>Slope:</strong> Phân phối Slope cho thấy 52.8% trường hợp có Slope = 1 (mức độ nguy cơ cao nhất), trong khi đó 40.9% có Slope = 2 (mức độ nguy cơ thấp). Đây là một chỉ số quan trọng giúp xác định mức độ nghiêm trọng của bệnh tim mạch dựa trên hình dạng điện tim và phản ứng của tim khi gắng sức.</li>\r\n    <li>Với sự kết hợp của <strong>Exercise Angina</strong> và <strong>Slope</strong>, có thể nhận thấy một mối liên hệ rõ rệt giữa những người có triệu chứng đau ngực và các mức độ nghiêm trọng của bệnh tim. Những người có Slope = 0 (nguy cơ thấp) ít có khả năng gặp phải triệu chứng đau ngực, trong khi các bệnh nhân có Slope = 1 và 2 (nguy cơ cao hơn) có tỷ lệ đau ngực cao hơn.</li>\r\n    <li><strong>Thực tế lâm sàng:</strong> Các đặc trưng này có thể được sử dụng kết hợp với nhau để giúp dự báo chính xác hơn về nguy cơ bệnh tim mạch, giúp các bác sĩ có thể đưa ra quyết định chẩn đoán và điều trị phù hợp. Điều này có thể giúp ích trong việc chỉ định các xét nghiệm thêm như ECG gắng sức hoặc chụp X-quang tim để đánh giá sâu hơn.</li>\r\n  </ul>\r\n</div>\r\n","user":"anonymous","dateUpdated":"2025-05-07T23:03:24+0700","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746633552101_-1475847928","id":"20250507-225912_138125683","dateCreated":"2025-05-07T22:59:12+0700","dateStarted":"2025-05-07T23:03:24+0700","dateFinished":"2025-05-07T23:03:24+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16859"},{"text":"%md\n<div style=\"background-color: #FFB8D0; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h3 style=\"margin: 0;\">Target Feature</h3>\n</div>\n\n","user":"anonymous","dateUpdated":"2025-05-07T22:06:45+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309355_-1871731187","id":"20250507-121251_1521291786","dateCreated":"2025-05-07T22:05:09+0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16860"},{"text":"%md\n<div style=\"background-color: #6A9CFD; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h2 style=\"margin: 0;\">Phân tích tương quan giữa các biến</h1>\n</div>","user":"anonymous","dateUpdated":"2025-05-07T22:06:45+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309356_-34364684","id":"20250507-130148_123218791","dateCreated":"2025-05-07T22:05:09+0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16861"},{"text":"%pyspark\n\n#1 Tính toán ma trận tương quan & vẽ heatmap\nplt.figure(figsize=(12, 8))\ncorrelation_matrix = df_data.corr()\nsns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\", linewidths=0.5)\nplt.title(\"Ma trận tương quan giữa các biến\")\nplt.show()\n","user":"anonymous","dateUpdated":"2025-05-07T23:28:35+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309356_-532688192","id":"20250507-121355_1743224917","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:04:02+0700","dateFinished":"2025-05-07T23:04:02+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16862"},{"text":"\n\n%md\n<div style=\"background-color: #6A9CFD; color: white; display: inline-block; padding: 8px 12px; border-radius: 6px;\">\n  <h1 style=\"margin: 0;\">Phần Mô Hình</h1>\n</div>\n","user":"anonymous","dateUpdated":"2025-05-07T23:04:44+0700","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309357_-1268553600","id":"20250507-215310_160552552","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:04:44+0700","dateFinished":"2025-05-07T23:04:44+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16863"},{"text":"%pyspark\r\n\r\n# Cell 0: Import libraries and preprocess data\r\nimport pandas as pd\r\nimport numpy as np\r\nfrom sklearn.model_selection import train_test_split, GridSearchCV, learning_curve, cross_val_score\r\nfrom sklearn.preprocessing import StandardScaler\r\nfrom sklearn.metrics import classification_report\r\nfrom sklearn.inspection import permutation_importance\r\nfrom sklearn.metrics import f1_score, roc_curve, precision_recall_curve, confusion_matrix\r\nfrom sklearn.compose import ColumnTransformer\r\nfrom sklearn.preprocessing import OneHotEncoder\r\nfrom sklearn.neural_network import MLPClassifier\r\nfrom sklearn.ensemble import RandomForestClassifier, StackingClassifier\r\nfrom sklearn.linear_model import LogisticRegression\r\nimport matplotlib.pyplot as plt\r\nimport seaborn as sns\r\nfrom imblearn.over_sampling import SMOTE\r\nimport warnings\r\nimport os","user":"anonymous","dateUpdated":"2025-05-07T23:40:42+0700","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309358_-984997797","id":"20250507-130219_2074417862","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:40:42+0700","dateFinished":"2025-05-07T23:40:42+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16864"},{"text":"%pyspark\r\n\r\n# Set random seed for reproducibility\r\nnp.random.seed(42)\r\n\r\n# Create output directory for saving results\r\noutput_dir = 'model_outputs'\r\nif not os.path.exists(output_dir):\r\n    os.makedirs(output_dir)\r\n\r\ndef load_and_preprocess_data(file_path):\r\n    # Load dataset\r\n    data = pd.read_csv(file_path)\r\n\r\n    # Remove duplicates\r\n    print(f\"Initial data shape: {data.shape}\")\r\n    print(f\"Number of duplicates before removal: {data.duplicated().sum()}\")\r\n    data = data.drop_duplicates()\r\n    print(f\"Data shape after removing duplicates: {data.shape}\")\r\n\r\n    # Handle outliers (using IQR for numerical columns)\r\n    numerical_cols = ['age', 'trestbps', 'chol', 'thalach', 'oldpeak']\r\n    for col in numerical_cols:\r\n        Q1 = data[col].quantile(0.25)\r\n        Q3 = data[col].quantile(0.75)\r\n        IQR = Q3 - Q1\r\n        lower_bound = Q1 - 1.5 * IQR\r\n        upper_bound = Q3 + 1.5 * IQR\r\n        data = data[(data[col] >= lower_bound) & (data[col] <= upper_bound)]\r\n    print(f\"Data shape after outlier removal: {data.shape}\")\r\n\r\n    # Feature engineering\r\n    data['chol_age_ratio'] = data['chol'] / data['age']\r\n    data['thalach_age_ratio'] = data['thalach'] / data['age']\r\n    data['oldpeak_thalach_ratio'] = data['oldpeak'] / (data['thalach'] + 1e-6)\r\n    data['cp_exang_interaction'] = data['cp'] * data['exang']\r\n\r\n    # Handle oldpeak for log transform\r\n    data['oldpeak'] = data['oldpeak'].clip(lower=1e-6)  # Avoid zero or negative values\r\n    data['log_oldpeak'] = np.log1p(data['oldpeak'])\r\n\r\n    # Convert trestbps to bins (ensure numerical encoding)\r\n    data['trestbps_bin'] = pd.cut(data['trestbps'], bins=[0, 120, 140, 200], labels=[0, 1, 2]).astype(int)\r\n\r\n    # Remove rows with NaN or infinite values\r\n    data = data.replace([np.inf, -np.inf], np.nan)\r\n    data = data.dropna()\r\n    print(f\"Data shape after removing NaN/infinite values: {data.shape}\")\r\n\r\n    # Define categorical and numerical columns\r\n    categorical_cols = ['cp', 'restecg', 'slope']\r\n    numerical_cols = ['age', 'sex', 'trestbps', 'chol', 'fbs', 'thalach', 'exang', 'oldpeak',\r\n                     'chol_age_ratio', 'thalach_age_ratio', 'oldpeak_thalach_ratio',\r\n                     'log_oldpeak', 'trestbps_bin', 'cp_exang_interaction']\r\n\r\n    # Preprocessing pipeline\r\n    preprocessor = ColumnTransformer(\r\n        transformers=[\r\n            ('num', StandardScaler(), numerical_cols),\r\n            ('cat', OneHotEncoder(drop='first', sparse_output=False), categorical_cols)\r\n        ])\r\n\r\n    # Split features and target\r\n    X = data.drop('target', axis=1)\r\n    y = data['target']\r\n\r\n    # Apply preprocessing\r\n    X = preprocessor.fit_transform(X)\r\n\r\n    # Get feature names after preprocessing\r\n    cat_feature_names = preprocessor.named_transformers_['cat'].get_feature_names_out(categorical_cols)\r\n    feature_names = numerical_cols + list(cat_feature_names)\r\n\r\n    X = pd.DataFrame(X, columns=feature_names)\r\n\r\n    # Feature selection based on Random Forest importance (replacing XGBoost)\r\n    rf_temp = RandomForestClassifier(random_state=42)\r\n    rf_temp.fit(X, y)\r\n    feature_importance = pd.Series(rf_temp.feature_importances_, index=feature_names)\r\n    selected_features = feature_importance[feature_importance > 0.02].index.tolist()\r\n    X = X[selected_features]\r\n    print(f\"Selected features: {selected_features}\")\r\n    print(f\"Data shape after feature selection: {X.shape}\")\r\n\r\n    # Apply SMOTE for data augmentation\r\n    smote = SMOTE(random_state=42, k_neighbors=3)\r\n    X, y = smote.fit_resample(X, y)\r\n    print(f\"Data shape after SMOTE: {X.shape}\")\r\n    print(\"Class distribution after SMOTE:\")\r\n    print(y.value_counts())\r\n\r\n    # Create subplots for 2 rows and 2 columns\r\n    fig, axes = plt.subplots(2, 2, figsize=(20, 12))\r\n    \r\n    # Biểu đồ phân bố lớp trước SMOTE\r\n    sns.countplot(x=y, hue=y, palette='Set2', legend=False, ax=axes[0, 0])\r\n    axes[0, 0].set_title('Class Distribution Before SMOTE', fontsize=14)\r\n    axes[0, 0].set_xlabel('Target', fontsize=12)\r\n    axes[0, 0].set_ylabel('Count', fontsize=12)\r\n\r\n    # Biểu đồ phân bố lớp sau SMOTE\r\n    sns.countplot(x=y, palette='Set2', ax=axes[0, 1])\r\n    axes[0, 1].set_title('Class Distribution After SMOTE', fontsize=14)\r\n    axes[0, 1].set_xlabel('Target', fontsize=12)\r\n    axes[0, 1].set_ylabel('Count', fontsize=12)\r\n    \r\n    # Biểu đồ ma trận tương quan\r\n    corr_matrix = data[numerical_cols].corr()\r\n    sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt='.2f', cbar=True, square=True, ax=axes[1, 1])\r\n    axes[1, 1].set_title('Correlation Matrix of Numerical Features', fontsize=14)\r\n\r\n    # Biểu đồ tầm quan trọng đặc trưng từ Random Forest\r\n    feature_importance.sort_values(ascending=False).plot(kind='bar', color='skyblue', ax=axes[1, 0])\r\n    axes[1, 0].set_title('Feature Importance from Random Forest', fontsize=14)\r\n    axes[1, 0].set_xlabel('Feature', fontsize=12)\r\n    axes[1, 0].set_ylabel('Importance', fontsize=12)\r\n    axes[1, 0].tick_params(axis='x', rotation=45)\r\n\r\n\r\n\r\n    plt.tight_layout()\r\n    plt.savefig(os.path.join(output_dir, 'combined_plots.png'))\r\n    plt.show()\r\n\r\n    # Split data into train and test sets\r\n    X_train, X_test, y_train, y_test = train_test_split(\r\n        X, y, test_size=0.2, random_state=42\r\n    )\r\n\r\n    return X_train, X_test, y_train, y_test, X, y, selected_features\r\n\r\n# Load and preprocess data\r\nfile_path = path_combined_heart_data\r\nprint(\"=== Preprocessing Data ===\")\r\nX_train, X_test, y_train, y_test, X, y, feature_names = load_and_preprocess_data(file_path)\r\n","user":"anonymous","dateUpdated":"2025-05-07T23:40:44+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309358_-106260189","id":"20250507-215410_449615337","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:40:44+0700","dateFinished":"2025-05-07T23:40:47+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16865"},{"text":"%pyspark\n\n# Cell 1: Train MLP\ndef train_mlp(X_train, y_train):\n    \"\"\"\n    Train the MLP model using GridSearchCV.\n    Returns the best model and its parameters.\n    \"\"\"\n    print(\"\\nTraining MLP...\")\n    model = MLPClassifier(random_state=42, max_iter=3000, early_stopping=True, tol=1e-3)\n    param_grid = {\n        'hidden_layer_sizes': [(100,), (100, 50), (50, 50)],\n        'activation': ['relu', 'tanh'],\n        'learning_rate_init': [0.001, 0.01],\n        'alpha': [0.0001, 0.001]\n    }\n\n    grid_search = GridSearchCV(\n        model,\n        param_grid,\n        cv=5,\n        scoring='roc_auc',\n        n_jobs=-1\n    )\n    grid_search.fit(X_train, y_train)\n\n    print(f\"Best Parameters: {grid_search.best_params_}\")\n    return grid_search.best_estimator_, grid_search.best_params_\n\n# Train MLP\nmlp_model, mlp_params = train_mlp(X_train, y_train)","user":"anonymous","dateUpdated":"2025-05-07T23:40:52+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309358_-806856705","id":"20250507-215422_1620428306","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:40:52+0700","dateFinished":"2025-05-07T23:41:12+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16866"},{"text":"%pyspark\n# Cell 2: Evaluate and visualize\n\n\ndef evaluate_and_visualize_model(model, model_name, X_train, X_test, y_train, y_test, X, y, feature_names):\n    \"\"\"\n    Evaluate and visualize results for a given model, keeping F1 Score and other evaluation methods.\n    Saves results and plots to the output directory.\n    \"\"\"\n    # Predict on test set\n    y_pred = model.predict(X_test)\n    y_prob = model.predict_proba(X_test)[:, 1]\n\n    # Calculate F1 Score\n    f1 = f1_score(y_test, y_pred)\n    \n    # Print results\n    print(f\"\\n{model_name} Results:\")\n    print(f\"F1 Score: {f1:.4f}\")\n\n    # Classification Report\n    print(\"\\nClassification Report:\")\n    class_report = classification_report(y_test, y_pred, target_names=['No Disease', 'Disease'])\n    print(class_report)\n\n    # Save results to file\n    with open(os.path.join(output_dir, f'model_results_{model_name.lower()}.txt'), 'w') as f:\n        f.write(f\"Model Evaluation Results - {model_name}\\n\")\n        f.write(\"=\"*40 + \"\\n\")\n        f.write(f\"F1 Score: {f1:.4f}\\n\")\n        f.write(\"-\"*40 + \"\\n\")\n        f.write(\"Classification Report:\\n\")\n        f.write(class_report)\n        f.write(\"-\"*40 + \"\\n\")\n\n    # ROC Curve\n    plt.figure(figsize=(12, 8), dpi=200)\n    fpr, tpr, _ = roc_curve(y_test, y_prob)\n    plt.plot(fpr, tpr, label=f'{model_name}')\n    plt.plot([0, 1], [0, 1], 'k--')\n    plt.xlabel('False Positive Rate', fontsize=12)\n    plt.ylabel('True Positive Rate', fontsize=12)\n    plt.title(f'ROC Curve - {model_name}', fontsize=14)\n    plt.legend(loc='lower right')\n    plt.grid(True)\n    plt.savefig(os.path.join(output_dir, f'roc_curve_{model_name.lower()}.png'))\n    plt.show()\n\n    # Confusion Matrix\n    plt.figure(figsize=(6, 5), dpi=200)\n    cm = confusion_matrix(y_test, y_pred)\n    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues')\n    plt.title(f'Confusion Matrix - {model_name}')\n    plt.xlabel('Predicted')\n    plt.ylabel('Actual')\n    plt.savefig(os.path.join(output_dir, f'confusion_matrix_{model_name.lower()}.png'))\n    plt.show()\n\n    # Learning Curve\n    train_sizes, train_scores, test_scores = learning_curve(\n        model, X, y, cv=5, scoring='roc_auc', n_jobs=-1, train_sizes=np.linspace(0.1, 1.0, 10)\n    )\n    plt.figure(figsize=(10, 6), dpi=200)\n    plt.plot(train_sizes, train_scores.mean(axis=1), label='Training AUC')\n    plt.plot(train_sizes, test_scores.mean(axis=1), label='Validation AUC')\n    plt.xlabel('Training Examples')\n    plt.ylabel('AUC')\n    plt.title(f'Learning Curve - {model_name}', fontsize=14)\n    plt.legend(loc='best')\n    plt.grid(True)\n    plt.savefig(os.path.join(output_dir, f'learning_curve_{model_name.lower()}.png'))\n    plt.show()\n\n    # Feature Importance using Permutation Importance\n    print(\"\\nComputing Feature Importance...\")\n    perm_importance = permutation_importance(model, X_test, y_test, scoring='roc_auc', n_repeats=10, random_state=42, n_jobs=-1)\n    sorted_idx = perm_importance.importances_mean.argsort()\n    \n    plt.figure(figsize=(10, len(feature_names) * 0.3), dpi=200)\n    plt.barh(np.array(feature_names)[sorted_idx], perm_importance.importances_mean[sorted_idx])\n    plt.xlabel('Permutation Importance (AUC Decrease)')\n    plt.title(f'Feature Importance - {model_name}', fontsize=14)\n    plt.savefig(os.path.join(output_dir, f'feature_importance_{model_name.lower()}.png'))\n    plt.show()\n\n","user":"anonymous","dateUpdated":"2025-05-07T23:41:17+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309358_1205412338","id":"20250507-215435_995970243","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:41:17+0700","dateFinished":"2025-05-07T23:41:17+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16867"},{"text":"%pyspark\r\n\r\n# Cell 3: Train Stacking Classifier\r\ndef train_stacking(X_train, y_train):\r\n    \"\"\"\r\n    Train the Stacking Classifier with base models and a meta-learner.\r\n    Returns the best model and its parameters.\r\n    \"\"\"\r\n    print(\"\\nTraining Stacking Classifier...\")\r\n    # Define base models (replace XGBoost with Random Forest)\r\n    estimators = [\r\n        ('rf', RandomForestClassifier(random_state=42, n_estimators=100, max_depth=3)),\r\n        ('mlp', MLPClassifier(random_state=42, hidden_layer_sizes=(100,), max_iter=7000, tol=1e-5))\r\n    ]\r\n\r\n    # Define meta-learner\r\n    stacking_model = StackingClassifier(\r\n        estimators=estimators,\r\n        final_estimator=LogisticRegression(),\r\n        n_jobs=-1,\r\n        passthrough=True\r\n    )\r\n\r\n    # Grid search for stacking\r\n    param_grid = {\r\n        'final_estimator__C': [0.1, 1.0, 10.0]\r\n    }\r\n\r\n    grid_search = GridSearchCV(\r\n        stacking_model,\r\n        param_grid,\r\n        cv=5,\r\n        scoring='roc_auc',\r\n        n_jobs=-1\r\n    )\r\n    grid_search.fit(X_train, y_train)\r\n\r\n    print(f\"Best Parameters: {grid_search.best_params_}\")\r\n    return grid_search.best_estimator_, grid_search.best_params_\r\n\r\n# Train Stacking Classifier\r\nstacking_model, stacking_params = train_stacking(X_train, y_train)","user":"anonymous","dateUpdated":"2025-05-07T23:41:20+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309358_-1888745184","id":"20250507-215444_798115316","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:41:20+0700","dateFinished":"2025-05-07T23:47:50+0700","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16868"},{"text":"%pyspark\n# Cell 4: Evaluate and visualize Stacking Classifier\nevaluate_and_visualize_model(stacking_model, 'Stacking', X_train, X_test, y_train, y_test, X, y, feature_names)","user":"anonymous","dateUpdated":"2025-05-07T23:48:02+0700","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true,"editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746630309358_-832869886","id":"20250507-215456_914840084","dateCreated":"2025-05-07T22:05:09+0700","dateStarted":"2025-05-07T23:19:54+0700","status":"ABORT","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16869"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2025-05-07T23:19:54+0700","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1746634794737_661412937","id":"20250507-231954_1290739588","dateCreated":"2025-05-07T23:19:54+0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:16870"}],"name":"INDS/Report_final","id":"2KVFC5D6S","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}